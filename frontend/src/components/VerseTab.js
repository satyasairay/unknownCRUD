import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
export function VerseTab({ draft, canonicalLang, onManualNumberChange, onTextChange, onTagsChange, errorMessage, }) {
    const canonicalText = draft.texts[canonicalLang] ?? "";
    const englishText = draft.texts.en ?? "";
    const tagsAsString = draft.tags.join(", ");
    const handleTagInput = (value) => {
        const tokens = value
            .split(",")
            .map((token) => token.trim())
            .filter(Boolean);
        onTagsChange(tokens);
    };
    return (_jsxs("div", { className: "flex flex-col gap-6", children: [_jsxs("section", { className: "grid gap-4 sm:grid-cols-2", children: [_jsxs("div", { className: "flex flex-col gap-2", children: [_jsx("label", { className: "text-sm font-medium text-slate-300", children: "Manual Verse Number" }), _jsx("input", { className: "rounded-md border border-slate-700 bg-slate-900 px-3 py-2 text-sm focus:border-brand focus:outline-none", placeholder: "Enter manual number\u2026", value: draft.manualNumber, onChange: (event) => onManualNumberChange(event.target.value) }), _jsx("p", { className: "text-xs text-slate-500", children: "Must be unique within the work." })] }), _jsxs("div", { className: "flex flex-col gap-2", children: [_jsx("label", { className: "text-sm font-medium text-slate-300", children: "System Verse ID" }), _jsx("input", { className: "rounded-md border border-slate-800 bg-slate-950 px-3 py-2 text-sm text-slate-400", value: draft.verseId ?? "New verse (unsaved)", readOnly: true })] })] }), errorMessage && (_jsx("div", { className: "rounded-md border border-rose-700 bg-rose-950/40 px-3 py-2 text-sm text-rose-200", children: errorMessage })), _jsxs("section", { className: "grid gap-6 md:grid-cols-2", children: [_jsxs("div", { className: "flex flex-col gap-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm text-slate-400", children: [_jsxs("label", { className: "font-medium text-slate-200", children: ["Canonical Text (", canonicalLang.toUpperCase(), ")"] }), _jsxs("span", { children: [canonicalText.length, " chars"] })] }), _jsx("textarea", { className: "min-h-[160px] rounded-md border border-slate-700 bg-slate-900 px-3 py-2 text-sm focus:border-brand focus:outline-none", value: canonicalText, placeholder: "Canonical language content\u2026", onChange: (event) => onTextChange(canonicalLang, event.target.value) })] }), _jsxs("div", { className: "flex flex-col gap-2", children: [_jsxs("div", { className: "flex items-center justify-between text-sm text-slate-400", children: [_jsx("label", { className: "font-medium text-slate-200", children: "English" }), _jsxs("span", { children: [englishText.length, " chars"] })] }), _jsx("textarea", { className: "min-h-[160px] rounded-md border border-slate-700 bg-slate-900 px-3 py-2 text-sm focus:border-brand focus:outline-none", value: englishText, placeholder: "English translation\u2026", onChange: (event) => onTextChange("en", event.target.value) })] })] }), _jsxs("section", { className: "flex flex-col gap-2", children: [_jsx("label", { className: "text-sm font-medium text-slate-300", children: "Tags (comma separated)" }), _jsx("input", { className: "rounded-md border border-slate-700 bg-slate-900 px-3 py-2 text-sm focus:border-brand focus:outline-none", placeholder: "e.g. intro, devotion", value: tagsAsString, onChange: (event) => handleTagInput(event.target.value) }), _jsx("p", { className: "text-xs text-slate-500", children: "Tags help group related verses in the UI." })] })] }));
}
